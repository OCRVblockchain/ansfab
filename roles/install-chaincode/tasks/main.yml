---
- name: Transfer chaincode
  copy:
    src: "./chaincode"
    dest: "{{ fabric_starter_workdir }}"
    directory_mode: yes

- name: Install chaincode dependencies via npm
  npm:
    path: "{{ fabric_starter_workdir }}/chaincode/rails/contract/javascript"

- name: Install chaincode - phase 1
  block:

    - name: Package chaincode
      shell: 'peer lifecycle chaincode package rails.tar.gz --path {{ fabric_starter_workdir }}/chaincode/rails/contract/javascript/ --lang node --label rails_1'
      when: "org in item.particapants"
      loop: "{{ channels }}"

    - name: Install chaincode
      shell: 'peer lifecycle chaincode install rails.tar.gz'

    - name: Queryinstalled output &> log.txt
      raw: 'export CORE_PEER_TLS_ENABLED=true &&
            export CORE_PEER_LOCALMSPID="{{ org }}MSP" &&
            export CORE_PEER_TLS_ROOTCERT_FILE={{ peer_dir }}/tls/ca.crt &&
            export CORE_PEER_MSPCONFIGPATH={{ admin_dir }}/msp &&
            export CORE_PEER_ADDRESS=peer0.{{ org }}.{{ domain }}:7051 &&
            peer lifecycle chaincode queryinstalled >&log.txt'

    - name: Display log.txt
      shell: "cat log.txt"
      register: output

    - debug:
        var: output

    - name: Approve for org
      shell: 'peer lifecycle chaincode approveformyorg -o orderer{{ orderer_id | default() }}.{{ domain }}:7050 --tls --cafile {{ orderer_org }}/tlsca/tlsca.{{ domain }}-cert.pem --channelID {{ item.name }} --name rails --version 1 --init-required --package-id $(sed -n "/rails_1/{s/^Package ID: //; s/, Label:.*$//; p;}" log.txt) --sequence 1 &> log2.txt'
      loop: "{{ channels }}"

  environment:
    CORE_PEER_TLS_ENABLED: "true"
    CORE_PEER_LOCALMSPID: "{{ org }}MSP"
    CORE_PEER_TLS_ROOTCERT_FILE: "{{ peer_dir }}/tls/ca.crt"
    CORE_PEER_MSPCONFIGPATH: "{{ admin_dir }}/msp"
    CORE_PEER_ADDRESS: "peer0.{{ org }}.{{ domain }}:7051"

- name: Build connection params
  shell: echo "--peerAddresses peer0.{{ org }}.{{ domain }}:7051 --tlsRootCertFiles {{ local_peer_dir }}/tls/ca.crt " >> conn_params.txt
  delegate_to: localhost

- name: Install chaincode - phase 2
  block:

    - name: Commit chaincode
      shell: 'peer lifecycle chaincode commit -o orderer{{ orderer_id | default() }}.{{ domain }}:7050 --tls --cafile {{ local_orderer_dir }}/tlsca/tlsca.{{ domain }}-cert.pem --channelID {{ item.name }} --name rails --version 1 --sequence 1 --init-required $(cat ./conn_params.txt) &> log3.txt'
      when: "org in item.particapants[0]"
      loop: "{{ channels }}"

    - name: Invoke chaincode
      shell: "peer chaincode invoke -o orderer{{ orderer_id | default() }}.{{ domain }}:7050 --tls --cafile {{ local_orderer_dir }}/tlsca/tlsca.{{ domain }}-cert.pem -C {{ item.name }} -n rails $(cat ./conn_params.txt) --isInit -c '{\"function\":\"create\",\"Args\":[\"rail\",\"10\",\"\"]}'"
      when: "org in item.particapants[0]"
      loop: "{{ channels }}"

  environment:
    CORE_PEER_TLS_ENABLED: "true"
    CORE_PEER_LOCALMSPID: "{{ org }}MSP"
    CORE_PEER_TLS_ROOTCERT_FILE: "{{ local_peer_dir }}/tls/ca.crt"
    CORE_PEER_MSPCONFIGPATH: "{{ local_admin_dir }}/msp"
    CORE_PEER_ADDRESS: "peer0.{{ org }}.{{ domain }}:7051"
  delegate_to: localhost

- name: Sleep 20s
  shell: "sleep 20"

- name: Query chaincode
  shell: "peer chaincode query -C {{ item.name }} -n rails -c '{\"Args\":[\"getTest\"]}' &> res.txt"
  environment:
    CORE_PEER_TLS_ENABLED: "true"
    CORE_PEER_LOCALMSPID: "{{ org }}MSP"
    CORE_PEER_TLS_ROOTCERT_FILE: "{{ peer_dir }}/tls/ca.crt"
    CORE_PEER_MSPCONFIGPATH: "{{ admin_dir }}/msp"
    CORE_PEER_ADDRESS: "peer0.{{ org }}.{{ domain }}:7051"
  loop: "{{ channels }}"